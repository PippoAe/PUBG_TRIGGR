<?xml version="1.0"?>
<doc>
    <assembly>
        <name>obs-websocket-dotnet</name>
    </assembly>
    <members>
        <member name="T:OBSWebsocketDotNet.OBSWebsocket">
            <summary>
            Instance of a connection with an obs-websocket server
            </summary>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.GetCurrentScene">
            <summary>
            Get the current scene info along with its items
            </summary>
            <returns>An <see cref="T:OBSWebsocketDotNet.OBSScene"/> object describing the current scene</returns>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.SetCurrentScene(System.String)">
            <summary>
            Set the current scene to the specified one
            </summary>
            <param name="sceneName">The desired scene name</param>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.ListScenes">
            <summary>
            List every available scene
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1" /> of <see cref="T:OBSWebsocketDotNet.OBSScene"/> objects describing each scene</returns>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.SetSourceRender(System.String,System.Boolean,System.String)">
            <summary>
            Change the visibility of the specified scene item
            </summary>
            <param name="itemName">Scene item which visiblity will be changed</param>
            <param name="visible">Desired visiblity</param>
            <param name="sceneName">Scene name of the specified item</param>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.ToggleStreaming">
            <summary>
            Start/Stop the streaming output
            </summary>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.ToggleRecording">
            <summary>
            Start/Stop the recording output
            </summary>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.GetStreamingStatus">
            <summary>
            Get the current status of the streaming and recording outputs
            </summary>
            <returns>An <see cref="T:OBSWebsocketDotNet.OBSOutputStatus"/> object describing the current outputs states</returns>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.ListTransitions">
            <summary>
            List all transitions
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of all transition names</returns>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.GetCurrentTransition">
            <summary>
            Get the current transition name and duration
            </summary>
            <returns>An <see cref="T:OBSWebsocketDotNet.OBSCurrentTransitionInfo"/> object with the current transition name and duration</returns>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.SetCurrentTransition(System.String)">
            <summary>
            Set the current transition to the specified one
            </summary>
            <param name="transitionName">Desired transition name</param>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.SetTransitionDuration(System.Int32)">
            <summary>
            Change the transition's duration
            </summary>
            <param name="duration">Desired transition duration (in milliseconds)</param>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.SetVolume(System.String,System.Single)">
            <summary>
            Change the volume of the specified source
            </summary>
            <param name="sourceName">Name of the source which volume will be changed</param>
            <param name="volume">Desired volume in linear scale (0.0 to 1.0)</param>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.GetVolume(System.String)">
            <summary>
            Get the volume of the specified source
            </summary>
            <param name="sourceName">Source name</param>
            <returns>An <see cref="T:OBSWebsocketDotNet.OBSVolumeInfo"/> object containing the volume and mute state of the specified source</returns>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.SetMute(System.String,System.Boolean)">
            <summary>
            Set the mute state of the specified source
            </summary>
            <param name="sourceName">Name of the source which mute state will be changed</param>
            <param name="mute">Desired mute state</param>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.ToggleMute(System.String)">
            <summary>
            Toggle the mute state of the specified source
            </summary>
            <param name="sourceName">Name of the source which mute state will be toggled</param>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.SetSceneItemPosition(System.String,System.Single,System.Single,System.String)">
            <summary>
            Set the position of the specified scene item
            </summary>
            <param name="itemName">Name of the scene item which position will be changed</param>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="sceneName">(optional) name of the scene the item belongs to</param>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.SetSceneItemTransform(System.String,System.Single,System.Single,System.Single,System.String)">
            <summary>
            Set the scale and rotation of the specified scene item
            </summary>
            <param name="itemName">Name of the scene item which transform will be changed</param>
            <param name="rotation">Rotation in Degrees</param>
            <param name="xScale">Horizontal scale factor</param>
            <param name="yScale">Vertical scale factor</param>
            <param name="sceneName">(optional) name of the scene the item belongs to</param>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.SetCurrentSceneCollection(System.String)">
            <summary>
            Set the current scene collection to the specified one
            </summary>
            <param name="scName">Desired scene collection name</param>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.GetCurrentSceneCollection">
            <summary>
            Get the name of the current scene collection
            </summary>
            <returns>Name of the current scene collection</returns>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.ListSceneCollections">
            <summary>
            List all scene collections
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of the names of all scene collections</returns>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.SetCurrentProfile(System.String)">
            <summary>
            Set the current profile to the specified one
            </summary>
            <param name="profileName">Name of the desired profile</param>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.GetCurrentProfile">
            <summary>
            Get the name of the current profile
            </summary>
            <returns>Name of the current profile</returns>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.ListProfiles">
            <summary>
            List all profiles
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of the names of all profiles</returns>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSWebsocket.OnSceneChange">
            <summary>
            Triggered when switching to another scene
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSWebsocket.OnSceneListChange">
            <summary>
            Triggered when a scene is created, deleted or renamed
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSWebsocket.OnSourceOrderChange">
            <summary>
            Triggered when the scene item list of the specified scene is reordered
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSWebsocket.OnSceneItemAdded">
            <summary>
            Triggered when a new item is added to the item list of the specified scene
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSWebsocket.OnSceneItemRemoved">
            <summary>
            Triggered when an item is removed from the item list of the specified scene
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSWebsocket.OnSceneItemVisibilityChange">
            <summary>
            Triggered when the visibility of a scene item changes
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSWebsocket.OnSceneCollectionChange">
            <summary>
            Triggered when switching to another scene collection
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSWebsocket.OnSceneCollectionListChange">
            <summary>
            Triggered when a scene collection is created, deleted or renamed
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSWebsocket.OnTransitionChange">
            <summary>
            Triggered when switching to another transition
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSWebsocket.OnTransitionDurationChange">
            <summary>
            Triggered when the current transition duration is changed
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSWebsocket.OnTransitionListChange">
            <summary>
            Triggered when a transition is created or removed
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSWebsocket.OnTransitionBegin">
            <summary>
            Triggered when a transition between two scenes starts. Followed by <see cref="F:OBSWebsocketDotNet.OBSWebsocket.OnSceneChange"/> 
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSWebsocket.OnProfileChange">
            <summary>
            Triggered when switching to another profile
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSWebsocket.OnProfileListChange">
            <summary>
            Triggered when a profile is created, imported, removed or renamed
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSWebsocket.OnStreamingStateChange">
            <summary>
            Triggered when the streaming output state changes
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSWebsocket.OnRecordingStateChange">
            <summary>
            Triggered when the recording output state changes
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSWebsocket.OnStreamStatus">
            <summary>
            Triggered every 2 seconds while streaming is active
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSWebsocket.OnExit">
            <summary>
            Triggered when OBS exits
            </summary>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.Connect(System.String,System.String)">
            <summary>
            Connect this instance to the specified URL, and authenticate (if needed) with the specified password
            </summary>
            <param name="url">Server URL in standard URL format</param>
            <param name="password">Server password</param>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.Disconnect">
            <summary>
            Disconnect this instance from the server
            </summary>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.SendRequest(System.String,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Sends a message to the websocket API with the specified request type and optional parameters
            </summary>
            <param name="requestType">obs-websocket request type, must be one specified in the protocol specification</param>
            <param name="additionalFields">additional JSON fields if required by the request type</param>
            <returns>The server's JSON response as a JObject</returns>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.GetVersion">
            <summary>
            Requests version info regarding obs-websocket, the API and OBS Studio
            </summary>
            <returns>Version info in an <see cref="T:OBSWebsocketDotNet.OBSVersion"/> object</returns>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.GetAuthInfo">
            <summary>
            Request authentication data. You don't have to call this manually.
            </summary>
            <returns>Authentication data in an <see cref="T:OBSWebsocketDotNet.OBSAuthInfo"/> object</returns>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.Authenticate(System.String,OBSWebsocketDotNet.OBSAuthInfo)">
            <summary>
            Authenticates to the Websocket server using the challenge and salt given in the passed <see cref="T:OBSWebsocketDotNet.OBSAuthInfo"/> object 
            </summary>
            <param name="password">User password</param>
            <param name="authInfo">Authentication data</param>
            <returns>true if authentication succeeds, false otherwise</returns>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.ProcessEventType(System.String,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Update message handler
            </summary>
            <param name="eventType">Value of "event-type" in the JSON body</param>
            <param name="body">full JSON message body</param>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.HashEncode(System.String)">
            <summary>
            Encode a Base64-encoded SHA-256 hash
            </summary>
            <param name="input">source string</param>
            <returns></returns>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSWebsocket.NewMessageID(System.Int32)">
            <summary>
            Generate a message ID
            </summary>
            <param name="length">(optional) message ID length</param>
            <returns>A random string of alphanumerical characters</returns>
        </member>
        <member name="T:OBSWebsocketDotNet.OutputState">
            <summary>
            Describes the state of an output (streaming or recording)
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OutputState.Starting">
            <summary>
            The output is initializing and doesn't produces frames yet
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OutputState.Started">
            <summary>
            The output is running and produces frames
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OutputState.Stopping">
            <summary>
            The output is stopping and sends the last remaining frames in its buffer
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OutputState.Stopped">
            <summary>
            The output is completely stopped
            </summary>
        </member>
        <member name="T:OBSWebsocketDotNet.SceneChangeCallback">
            <summary>
            Called by <see cref="F:OBSWebsocketDotNet.OBSWebsocket.OnSceneChange"/>
            </summary>
            <param name="sender"><see cref="T:OBSWebsocketDotNet.OBSWebsocket"/> instance</param>
            <param name="newSceneName">Name of the new current scene</param>
        </member>
        <member name="T:OBSWebsocketDotNet.SourceOrderChangeCallback">
            <summary>
            Called by <see cref="F:OBSWebsocketDotNet.OBSWebsocket.OnSourceOrderChange"/>
            </summary>
            <param name="sender"><see cref="T:OBSWebsocketDotNet.OBSWebsocket"/> instance</param>
            <param name="sceneName">Name of the scene where items where reordered</param>
        </member>
        <member name="T:OBSWebsocketDotNet.SceneItemUpdateCallback">
            <summary>
            Called by <see cref="F:OBSWebsocketDotNet.OBSWebsocket.OnSceneItemVisibilityChange"/>, <see cref="F:OBSWebsocketDotNet.OBSWebsocket.OnSceneItemAdded"/> or <see cref="F:OBSWebsocketDotNet.OBSWebsocket.OnSceneItemRemoved"/> 
            </summary>
            <param name="sender"><see cref="T:OBSWebsocketDotNet.OBSWebsocket"/> instance</param>
            <param name="sceneName">Name of the scene where the item is</param>
            <param name="itemName">Name of the concerned item</param>
        </member>
        <member name="T:OBSWebsocketDotNet.TransitionChangeCallback">
            <summary>
            Called by <see cref="F:OBSWebsocketDotNet.OBSWebsocket.OnTransitionChange"/> 
            </summary>
            <param name="sender"><see cref="T:OBSWebsocketDotNet.OBSWebsocket"/> instance</param>
            <param name="newTransitionName">Name of the new selected transition</param>
        </member>
        <member name="T:OBSWebsocketDotNet.TransitionDurationChangeCallback">
            <summary>
            Called by <see cref="F:OBSWebsocketDotNet.OBSWebsocket.OnTransitionDurationChange"/>
            </summary>
            <param name="sender"><see cref="T:OBSWebsocketDotNet.OBSWebsocket"/> instance</param>
            <param name="newDuration">Name of the new transition duration (in milliseconds)</param>
        </member>
        <member name="T:OBSWebsocketDotNet.OutputStateCallback">
            <summary>
            Called by <see cref="F:OBSWebsocketDotNet.OBSWebsocket.OnStreamingStateChange"/> or <see cref="F:OBSWebsocketDotNet.OBSWebsocket.OnRecordingStateChange"/>
            </summary>
            <param name="sender"><see cref="T:OBSWebsocketDotNet.OBSWebsocket"/> instance</param>
            <param name="type">New output state</param>
        </member>
        <member name="T:OBSWebsocketDotNet.StreamStatusCallback">
            <summary>
            Called by <see cref="F:OBSWebsocketDotNet.OBSWebsocket.OnStreamStatus"/>
            </summary>
            <param name="sender"><see cref="T:OBSWebsocketDotNet.OBSWebsocket"/> instance</param>
            <param name="status">Stream status data</param>
        </member>
        <member name="T:OBSWebsocketDotNet.OBSScene">
            <summary>
            Describes a scene in OBS, along with its items
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSScene.Name">
            <summary>
            OBS Scene name
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSScene.Items">
            <summary>
            Scene item list
            </summary>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSScene.#ctor(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Builds the object from the JSON description
            </summary>
            <param name="data">JSON scene description as a <see cref="T:Newtonsoft.Json.Linq.JObject" /></param>
        </member>
        <member name="T:OBSWebsocketDotNet.OBSSceneItem">
            <summary>
            Describes a scene item in an OBS scene
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSSceneItem.SourceName">
            <summary>
            Source name
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSSceneItem.InternalType">
            <summary>
            Source internal type
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSSceneItem.AudioVolume">
            <summary>
            Source audio volume
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSSceneItem.XPos">
            <summary>
            Scene item horizontal position/offset
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSSceneItem.YPos">
            <summary>
            Scene item vertical position/offset
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSSceneItem.SourceWidth">
            <summary>
            Item source width, without scaling and transforms applied
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSSceneItem.SourceHeight">
            <summary>
            Item source height, without scaling and transforms applied
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSSceneItem.Width">
            <summary>
            Item width
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSSceneItem.Height">
            <summary>
            Item height
            </summary>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSSceneItem.#ctor(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Builds the object from the JSON scene description
            </summary>
            <param name="data">JSON item description as a <see cref="T:Newtonsoft.Json.Linq.JObject"/></param>
        </member>
        <member name="T:OBSWebsocketDotNet.OBSAuthInfo">
            <summary>
            Data required by authentication
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSAuthInfo.AuthRequired">
            <summary>
            True if authentication is required, false otherwise
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSAuthInfo.Challenge">
            <summary>
            Authentication challenge
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSAuthInfo.PasswordSalt">
            <summary>
            Password salt
            </summary>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSAuthInfo.#ctor(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Builds the object from JSON response body
            </summary>
            <param name="data">JSON response body as a <see cref="T:Newtonsoft.Json.Linq.JObject"/></param>
        </member>
        <member name="T:OBSWebsocketDotNet.OBSVersion">
            <summary>
            Version info of the plugin, the API and OBS Studio
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSVersion.APIVersion">
            <summary>
            obs-websocket protocol version
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSVersion.PluginVersion">
            <summary>
            obs-websocket plugin version
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSVersion.OBSStudioVersion">
            <summary>
            OBS Studio version
            </summary>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSVersion.#ctor(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Builds the object from the JSON response body
            </summary>
            <param name="data">JSON response body as a <see cref="T:Newtonsoft.Json.Linq.JObject"/></param>
        </member>
        <member name="T:OBSWebsocketDotNet.OBSStreamStatus">
            <summary>
            Data of a stream status update
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSStreamStatus.Streaming">
            <summary>
            True if streaming is started and running, false otherwise
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSStreamStatus.Recording">
            <summary>
            True if recording is started and running, false otherwise
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSStreamStatus.BytesPerSec">
            <summary>
            Stream bitrate in bytes per second
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSStreamStatus.KbitsPerSec">
            <summary>
            Stream bitrate in kilobits per second
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSStreamStatus.Strain">
            <summary>
            RTMP output strain
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSStreamStatus.TotalStreamTime">
            <summary>
            Total time since streaming start
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSStreamStatus.TotalFrames">
            <summary>
            Number of frames sent since streaming start
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSStreamStatus.DroppedFrames">
            <summary>
            Overall number of frames dropped since streaming start
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSStreamStatus.FPS">
            <summary>
            Current framerate in Frames Per Second
            </summary>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSStreamStatus.#ctor(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Builds the object from the JSON event body
            </summary>
            <param name="data">JSON event body as a <see cref="T:Newtonsoft.Json.Linq.JObject"/></param>
        </member>
        <member name="T:OBSWebsocketDotNet.OBSOutputStatus">
            <summary>
            Status of streaming output and recording output
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSOutputStatus.IsStreaming">
            <summary>
            True if streaming is started and running, false otherwise
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSOutputStatus.IsRecording">
            <summary>
            True if recording is started and running, false otherwise
            </summary>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSOutputStatus.#ctor(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Builds the object from the JSON response body
            </summary>
            <param name="data">JSON response body as a <see cref="T:Newtonsoft.Json.Linq.JObject"/></param>
        </member>
        <member name="T:OBSWebsocketDotNet.OBSCurrentTransitionInfo">
            <summary>
            Current transition settings
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSCurrentTransitionInfo.Name">
            <summary>
            Transition name
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSCurrentTransitionInfo.Duration">
            <summary>
            Transition duration in milliseconds
            </summary>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSCurrentTransitionInfo.#ctor(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Builds the object from the JSON response body
            </summary>
            <param name="data">JSON response body as a <see cref="T:Newtonsoft.Json.Linq.JObject"/></param>
        </member>
        <member name="T:OBSWebsocketDotNet.OBSVolumeInfo">
            <summary>
            Volume settings of an OBS source
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSVolumeInfo.Volume">
            <summary>
            Source volume in linear scale (0.0 to 1.0)
            </summary>
        </member>
        <member name="F:OBSWebsocketDotNet.OBSVolumeInfo.Muted">
            <summary>
            True if source is muted, false otherwise
            </summary>
        </member>
        <member name="M:OBSWebsocketDotNet.OBSVolumeInfo.#ctor(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Builds the object from the JSON response body
            </summary>
            <param name="data">JSON response body as a <see cref="T:Newtonsoft.Json.Linq.JObject"/></param>
        </member>
        <member name="T:OBSWebsocketDotNet.AuthFailureException">
            <summary>
            Thrown if authentication fails
            </summary>
        </member>
        <member name="T:OBSWebsocketDotNet.ErrorResponseException">
            <summary>
            Thrown when the server responds with an error
            </summary>
        </member>
        <member name="M:OBSWebsocketDotNet.ErrorResponseException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message"></param>
        </member>
    </members>
</doc>
